#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL_BLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHocSinhTHPT")]
	public partial class QLDiemTHPTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDANTOC(DANTOC instance);
    partial void UpdateDANTOC(DANTOC instance);
    partial void DeleteDANTOC(DANTOC instance);
    partial void InsertDetail(Detail instance);
    partial void UpdateDetail(Detail instance);
    partial void DeleteDetail(Detail instance);
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertGroupPer(GroupPer instance);
    partial void UpdateGroupPer(GroupPer instance);
    partial void DeleteGroupPer(GroupPer instance);
    partial void InsertHOCKY(HOCKY instance);
    partial void UpdateHOCKY(HOCKY instance);
    partial void DeleteHOCKY(HOCKY instance);
    partial void InsertHANHKIEM(HANHKIEM instance);
    partial void UpdateHANHKIEM(HANHKIEM instance);
    partial void DeleteHANHKIEM(HANHKIEM instance);
    partial void InsertHOCLUC(HOCLUC instance);
    partial void UpdateHOCLUC(HOCLUC instance);
    partial void DeleteHOCLUC(HOCLUC instance);
    partial void InsertHOCSINH(HOCSINH instance);
    partial void UpdateHOCSINH(HOCSINH instance);
    partial void DeleteHOCSINH(HOCSINH instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOILOP(KHOILOP instance);
    partial void UpdateKHOILOP(KHOILOP instance);
    partial void DeleteKHOILOP(KHOILOP instance);
    partial void InsertKQ_CA_NAM_MON_HOC(KQ_CA_NAM_MON_HOC instance);
    partial void UpdateKQ_CA_NAM_MON_HOC(KQ_CA_NAM_MON_HOC instance);
    partial void DeleteKQ_CA_NAM_MON_HOC(KQ_CA_NAM_MON_HOC instance);
    partial void InsertKQ_CA_NAM_TONG_HOP(KQ_CA_NAM_TONG_HOP instance);
    partial void UpdateKQ_CA_NAM_TONG_HOP(KQ_CA_NAM_TONG_HOP instance);
    partial void DeleteKQ_CA_NAM_TONG_HOP(KQ_CA_NAM_TONG_HOP instance);
    partial void InsertKQ_HOC_KY_MON_HOC(KQ_HOC_KY_MON_HOC instance);
    partial void UpdateKQ_HOC_KY_MON_HOC(KQ_HOC_KY_MON_HOC instance);
    partial void DeleteKQ_HOC_KY_MON_HOC(KQ_HOC_KY_MON_HOC instance);
    partial void InsertKQ_HOC_KY_TONG_HOP(KQ_HOC_KY_TONG_HOP instance);
    partial void UpdateKQ_HOC_KY_TONG_HOP(KQ_HOC_KY_TONG_HOP instance);
    partial void DeleteKQ_HOC_KY_TONG_HOP(KQ_HOC_KY_TONG_HOP instance);
    partial void InsertLOAIDIEM(LOAIDIEM instance);
    partial void UpdateLOAIDIEM(LOAIDIEM instance);
    partial void DeleteLOAIDIEM(LOAIDIEM instance);
    partial void InsertLOAINGUOIDUNG(LOAINGUOIDUNG instance);
    partial void UpdateLOAINGUOIDUNG(LOAINGUOIDUNG instance);
    partial void DeleteLOAINGUOIDUNG(LOAINGUOIDUNG instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertNAMHOC(NAMHOC instance);
    partial void UpdateNAMHOC(NAMHOC instance);
    partial void DeleteNAMHOC(NAMHOC instance);
    partial void InsertNGHENGHIEP(NGHENGHIEP instance);
    partial void UpdateNGHENGHIEP(NGHENGHIEP instance);
    partial void DeleteNGHENGHIEP(NGHENGHIEP instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPHANLOP(PHANLOP instance);
    partial void UpdatePHANLOP(PHANLOP instance);
    partial void DeletePHANLOP(PHANLOP instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertTONGIAO(TONGIAO instance);
    partial void UpdateTONGIAO(TONGIAO instance);
    partial void DeleteTONGIAO(TONGIAO instance);
    #endregion
		
		public QLDiemTHPTDataContext() : 
				base(global::DAL_BLL.Properties.Settings.Default.QLHocSinhTHPTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLDiemTHPTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDiemTHPTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDiemTHPTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDiemTHPTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DANTOC> DANTOCs
		{
			get
			{
				return this.GetTable<DANTOC>();
			}
		}
		
		public System.Data.Linq.Table<Detail> Details
		{
			get
			{
				return this.GetTable<Detail>();
			}
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<GroupPer> GroupPers
		{
			get
			{
				return this.GetTable<GroupPer>();
			}
		}
		
		public System.Data.Linq.Table<HOCKY> HOCKies
		{
			get
			{
				return this.GetTable<HOCKY>();
			}
		}
		
		public System.Data.Linq.Table<HANHKIEM> HANHKIEMs
		{
			get
			{
				return this.GetTable<HANHKIEM>();
			}
		}
		
		public System.Data.Linq.Table<HOCLUC> HOCLUCs
		{
			get
			{
				return this.GetTable<HOCLUC>();
			}
		}
		
		public System.Data.Linq.Table<HOCSINH> HOCSINHs
		{
			get
			{
				return this.GetTable<HOCSINH>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOILOP> KHOILOPs
		{
			get
			{
				return this.GetTable<KHOILOP>();
			}
		}
		
		public System.Data.Linq.Table<KQ_CA_NAM_MON_HOC> KQ_CA_NAM_MON_HOCs
		{
			get
			{
				return this.GetTable<KQ_CA_NAM_MON_HOC>();
			}
		}
		
		public System.Data.Linq.Table<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this.GetTable<KQ_CA_NAM_TONG_HOP>();
			}
		}
		
		public System.Data.Linq.Table<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this.GetTable<KQ_HOC_KY_MON_HOC>();
			}
		}
		
		public System.Data.Linq.Table<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this.GetTable<KQ_HOC_KY_TONG_HOP>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDIEM> LOAIDIEMs
		{
			get
			{
				return this.GetTable<LOAIDIEM>();
			}
		}
		
		public System.Data.Linq.Table<LOAINGUOIDUNG> LOAINGUOIDUNGs
		{
			get
			{
				return this.GetTable<LOAINGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<NAMHOC> NAMHOCs
		{
			get
			{
				return this.GetTable<NAMHOC>();
			}
		}
		
		public System.Data.Linq.Table<NGHENGHIEP> NGHENGHIEPs
		{
			get
			{
				return this.GetTable<NGHENGHIEP>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PHANLOP> PHANLOPs
		{
			get
			{
				return this.GetTable<PHANLOP>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<TONGIAO> TONGIAOs
		{
			get
			{
				return this.GetTable<TONGIAO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANTOC")]
	public partial class DANTOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDanToc;
		
		private string _TenDanToc;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanTocChanging(string value);
    partial void OnMaDanTocChanged();
    partial void OnTenDanTocChanging(string value);
    partial void OnTenDanTocChanged();
    #endregion
		
		public DANTOC()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanToc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDanToc
		{
			get
			{
				return this._MaDanToc;
			}
			set
			{
				if ((this._MaDanToc != value))
				{
					this.OnMaDanTocChanging(value);
					this.SendPropertyChanging();
					this._MaDanToc = value;
					this.SendPropertyChanged("MaDanToc");
					this.OnMaDanTocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanToc", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDanToc
		{
			get
			{
				return this._TenDanToc;
			}
			set
			{
				if ((this._TenDanToc != value))
				{
					this.OnTenDanTocChanging(value);
					this.SendPropertyChanging();
					this._TenDanToc = value;
					this.SendPropertyChanged("TenDanToc");
					this.OnTenDanTocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANTOC_HOCSINH", Storage="_HOCSINHs", ThisKey="MaDanToc", OtherKey="MaDanToc")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.DANTOC = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.DANTOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail")]
	public partial class Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_NV;
		
		private System.Nullable<int> _ID_Role;
		
		private System.Nullable<int> _ID_Group;
		
		private System.Nullable<int> _ID_Per;
		
		private System.Nullable<bool> _Action_Check;
		
		private EntityRef<GroupPer> _GroupPer;
		
		private EntityRef<LOAINGUOIDUNG> _LOAINGUOIDUNG;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_NVChanging(string value);
    partial void OnID_NVChanged();
    partial void OnID_RoleChanging(System.Nullable<int> value);
    partial void OnID_RoleChanged();
    partial void OnID_GroupChanging(System.Nullable<int> value);
    partial void OnID_GroupChanged();
    partial void OnID_PerChanging(System.Nullable<int> value);
    partial void OnID_PerChanged();
    partial void OnAction_CheckChanging(System.Nullable<bool> value);
    partial void OnAction_CheckChanged();
    #endregion
		
		public Detail()
		{
			this._GroupPer = default(EntityRef<GroupPer>);
			this._LOAINGUOIDUNG = default(EntityRef<LOAINGUOIDUNG>);
			this._Permission = default(EntityRef<Permission>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="VarChar(6)")]
		public string ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._LOAINGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Role", DbType="Int")]
		public System.Nullable<int> ID_Role
		{
			get
			{
				return this._ID_Role;
			}
			set
			{
				if ((this._ID_Role != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RoleChanging(value);
					this.SendPropertyChanging();
					this._ID_Role = value;
					this.SendPropertyChanged("ID_Role");
					this.OnID_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Group", DbType="Int")]
		public System.Nullable<int> ID_Group
		{
			get
			{
				return this._ID_Group;
			}
			set
			{
				if ((this._ID_Group != value))
				{
					if (this._GroupPer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GroupChanging(value);
					this.SendPropertyChanging();
					this._ID_Group = value;
					this.SendPropertyChanged("ID_Group");
					this.OnID_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Per", DbType="Int")]
		public System.Nullable<int> ID_Per
		{
			get
			{
				return this._ID_Per;
			}
			set
			{
				if ((this._ID_Per != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PerChanging(value);
					this.SendPropertyChanging();
					this._ID_Per = value;
					this.SendPropertyChanged("ID_Per");
					this.OnID_PerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action_Check", DbType="Bit")]
		public System.Nullable<bool> Action_Check
		{
			get
			{
				return this._Action_Check;
			}
			set
			{
				if ((this._Action_Check != value))
				{
					this.OnAction_CheckChanging(value);
					this.SendPropertyChanging();
					this._Action_Check = value;
					this.SendPropertyChanged("Action_Check");
					this.OnAction_CheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPer_Detail", Storage="_GroupPer", ThisKey="ID_Group", OtherKey="ID_GroupPer", IsForeignKey=true)]
		public GroupPer GroupPer
		{
			get
			{
				return this._GroupPer.Entity;
			}
			set
			{
				GroupPer previousValue = this._GroupPer.Entity;
				if (((previousValue != value) 
							|| (this._GroupPer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupPer.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._GroupPer.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._ID_Group = value.ID_GroupPer;
					}
					else
					{
						this._ID_Group = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupPer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINGUOIDUNG_Detail", Storage="_LOAINGUOIDUNG", ThisKey="ID_NV", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAINGUOIDUNG LOAINGUOIDUNG
		{
			get
			{
				return this._LOAINGUOIDUNG.Entity;
			}
			set
			{
				LOAINGUOIDUNG previousValue = this._LOAINGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._LOAINGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAINGUOIDUNG.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._LOAINGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._ID_NV = value.MaLoai;
					}
					else
					{
						this._ID_NV = default(string);
					}
					this.SendPropertyChanged("LOAINGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_Detail", Storage="_Permission", ThisKey="ID_Per", OtherKey="ID_Per", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._ID_Per = value.ID_Per;
					}
					else
					{
						this._ID_Per = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Detail", Storage="_Role", ThisKey="ID_Role", OtherKey="ID_Role", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._ID_Role = value.ID_Role;
					}
					else
					{
						this._ID_Role = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MaHocSinh;
		
		private string _MaMonHoc;
		
		private string _MaHocKy;
		
		private string _MaNamHoc;
		
		private string _MaLop;
		
		private string _MaLoai;
		
		private double _Diem1;
		
		private EntityRef<HOCKY> _HOCKY;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LOAIDIEM> _LOAIDIEM;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnDiem1Changing(double value);
    partial void OnDiem1Changed();
    #endregion
		
		public DIEM()
		{
			this._HOCKY = default(EntityRef<HOCKY>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LOAIDIEM = default(EntityRef<LOAIDIEM>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LOAIDIEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Diem", Storage="_Diem1", DbType="Float NOT NULL")]
		public double Diem1
		{
			get
			{
				return this._Diem1;
			}
			set
			{
				if ((this._Diem1 != value))
				{
					this.OnDiem1Changing(value);
					this.SendPropertyChanging();
					this._Diem1 = value;
					this.SendPropertyChanged("Diem1");
					this.OnDiem1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_DIEM", Storage="_HOCKY", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_DIEM", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDIEM_DIEM", Storage="_LOAIDIEM", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAIDIEM LOAIDIEM
		{
			get
			{
				return this._LOAIDIEM.Entity;
			}
			set
			{
				LOAIDIEM previousValue = this._LOAIDIEM.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDIEM.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._LOAIDIEM.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LOAIDIEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_DIEM", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_MONHOC", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_DIEM", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _TenGiaoVien;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _MaMonHoc;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<bool> _GioiTinh;
		
		private string _CMND;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnTenGiaoVienChanging(string value);
    partial void OnTenGiaoVienChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGiaoVien", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenGiaoVien
		{
			get
			{
				return this._TenGiaoVien;
			}
			set
			{
				if ((this._TenGiaoVien != value))
				{
					this.OnTenGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._TenGiaoVien = value;
					this.SendPropertyChanged("TenGiaoVien");
					this.OnTenGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(14)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_LOPs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="MaGiaoVien", OtherKey="TenND")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_MONHOC", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIAOVIENs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIAOVIENs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupPer")]
	public partial class GroupPer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_GroupPer;
		
		private System.Nullable<int> _ID_Role;
		
		private string _TenGroupPer;
		
		private string _GroupPer_Code;
		
		private EntitySet<Detail> _Details;
		
		private EntitySet<Permission> _Permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GroupPerChanging(int value);
    partial void OnID_GroupPerChanged();
    partial void OnID_RoleChanging(System.Nullable<int> value);
    partial void OnID_RoleChanged();
    partial void OnTenGroupPerChanging(string value);
    partial void OnTenGroupPerChanged();
    partial void OnGroupPer_CodeChanging(string value);
    partial void OnGroupPer_CodeChanged();
    #endregion
		
		public GroupPer()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._Permissions = new EntitySet<Permission>(new Action<Permission>(this.attach_Permissions), new Action<Permission>(this.detach_Permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GroupPer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_GroupPer
		{
			get
			{
				return this._ID_GroupPer;
			}
			set
			{
				if ((this._ID_GroupPer != value))
				{
					this.OnID_GroupPerChanging(value);
					this.SendPropertyChanging();
					this._ID_GroupPer = value;
					this.SendPropertyChanged("ID_GroupPer");
					this.OnID_GroupPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Role", DbType="Int")]
		public System.Nullable<int> ID_Role
		{
			get
			{
				return this._ID_Role;
			}
			set
			{
				if ((this._ID_Role != value))
				{
					this.OnID_RoleChanging(value);
					this.SendPropertyChanging();
					this._ID_Role = value;
					this.SendPropertyChanged("ID_Role");
					this.OnID_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGroupPer", DbType="NVarChar(MAX)")]
		public string TenGroupPer
		{
			get
			{
				return this._TenGroupPer;
			}
			set
			{
				if ((this._TenGroupPer != value))
				{
					this.OnTenGroupPerChanging(value);
					this.SendPropertyChanging();
					this._TenGroupPer = value;
					this.SendPropertyChanged("TenGroupPer");
					this.OnTenGroupPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupPer_Code", DbType="NVarChar(MAX)")]
		public string GroupPer_Code
		{
			get
			{
				return this._GroupPer_Code;
			}
			set
			{
				if ((this._GroupPer_Code != value))
				{
					this.OnGroupPer_CodeChanging(value);
					this.SendPropertyChanging();
					this._GroupPer_Code = value;
					this.SendPropertyChanged("GroupPer_Code");
					this.OnGroupPer_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPer_Detail", Storage="_Details", ThisKey="ID_GroupPer", OtherKey="ID_Group")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPer_Permission", Storage="_Permissions", ThisKey="ID_GroupPer", OtherKey="ID_Group")]
		public EntitySet<Permission> Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				this._Permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.GroupPer = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.GroupPer = null;
		}
		
		private void attach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.GroupPer = this;
		}
		
		private void detach_Permissions(Permission entity)
		{
			this.SendPropertyChanging();
			entity.GroupPer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCKY")]
	public partial class HOCKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocKy;
		
		private string _TenHocKy;
		
		private System.Nullable<int> _HeSo;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<KQ_HOC_KY_MON_HOC> _KQ_HOC_KY_MON_HOCs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnTenHocKyChanging(string value);
    partial void OnTenHocKyChanged();
    partial void OnHeSoChanging(System.Nullable<int> value);
    partial void OnHeSoChanged();
    #endregion
		
		public HOCKY()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._KQ_HOC_KY_MON_HOCs = new EntitySet<KQ_HOC_KY_MON_HOC>(new Action<KQ_HOC_KY_MON_HOC>(this.attach_KQ_HOC_KY_MON_HOCs), new Action<KQ_HOC_KY_MON_HOC>(this.detach_KQ_HOC_KY_MON_HOCs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocKy", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenHocKy
		{
			get
			{
				return this._TenHocKy;
			}
			set
			{
				if ((this._TenHocKy != value))
				{
					this.OnTenHocKyChanging(value);
					this.SendPropertyChanging();
					this._TenHocKy = value;
					this.SendPropertyChanged("TenHocKy");
					this.OnTenHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSo", DbType="Int")]
		public System.Nullable<int> HeSo
		{
			get
			{
				return this._HeSo;
			}
			set
			{
				if ((this._HeSo != value))
				{
					this.OnHeSoChanging(value);
					this.SendPropertyChanging();
					this._HeSo = value;
					this.SendPropertyChanged("HeSo");
					this.OnHeSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_DIEM", Storage="_DIEMs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_KQ_HOC_KY_MON_HOC", Storage="_KQ_HOC_KY_MON_HOCs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this._KQ_HOC_KY_MON_HOCs;
			}
			set
			{
				this._KQ_HOC_KY_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaHocKy", OtherKey="MaHocKy")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
		
		private void attach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANHKIEM")]
	public partial class HANHKIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHanhKiem;
		
		private string _TenHanhKiem;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnTenHanhKiemChanging(string value);
    partial void OnTenHanhKiemChanged();
    #endregion
		
		public HANHKIEM()
		{
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHanhKiem", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenHanhKiem
		{
			get
			{
				return this._TenHanhKiem;
			}
			set
			{
				if ((this._TenHanhKiem != value))
				{
					this.OnTenHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._TenHanhKiem = value;
					this.SendPropertyChanged("TenHanhKiem");
					this.OnTenHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANHKIEM_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANHKIEM_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HANHKIEM = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HANHKIEM = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HANHKIEM = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HANHKIEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCLUC")]
	public partial class HOCLUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocLuc;
		
		private string _TenHocLuc;
		
		private double _DiemCanDuoi;
		
		private double _DiemCanTren;
		
		private double _DiemKhongChe;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocLucChanging(string value);
    partial void OnMaHocLucChanged();
    partial void OnTenHocLucChanging(string value);
    partial void OnTenHocLucChanged();
    partial void OnDiemCanDuoiChanging(double value);
    partial void OnDiemCanDuoiChanged();
    partial void OnDiemCanTrenChanging(double value);
    partial void OnDiemCanTrenChanged();
    partial void OnDiemKhongCheChanging(double value);
    partial void OnDiemKhongCheChanged();
    #endregion
		
		public HOCLUC()
		{
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocLuc", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenHocLuc
		{
			get
			{
				return this._TenHocLuc;
			}
			set
			{
				if ((this._TenHocLuc != value))
				{
					this.OnTenHocLucChanging(value);
					this.SendPropertyChanging();
					this._TenHocLuc = value;
					this.SendPropertyChanged("TenHocLuc");
					this.OnTenHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCanDuoi", DbType="Float NOT NULL")]
		public double DiemCanDuoi
		{
			get
			{
				return this._DiemCanDuoi;
			}
			set
			{
				if ((this._DiemCanDuoi != value))
				{
					this.OnDiemCanDuoiChanging(value);
					this.SendPropertyChanging();
					this._DiemCanDuoi = value;
					this.SendPropertyChanged("DiemCanDuoi");
					this.OnDiemCanDuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCanTren", DbType="Float NOT NULL")]
		public double DiemCanTren
		{
			get
			{
				return this._DiemCanTren;
			}
			set
			{
				if ((this._DiemCanTren != value))
				{
					this.OnDiemCanTrenChanging(value);
					this.SendPropertyChanging();
					this._DiemCanTren = value;
					this.SendPropertyChanged("DiemCanTren");
					this.OnDiemCanTrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemKhongChe", DbType="Float NOT NULL")]
		public double DiemKhongChe
		{
			get
			{
				return this._DiemKhongChe;
			}
			set
			{
				if ((this._DiemKhongChe != value))
				{
					this.OnDiemKhongCheChanging(value);
					this.SendPropertyChanging();
					this._DiemKhongChe = value;
					this.SendPropertyChanged("DiemKhongChe");
					this.OnDiemKhongCheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCLUC_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaHocLuc", OtherKey="MaHocLuc")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCLUC_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaHocLuc", OtherKey="MaHocLuc")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCLUC = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCLUC = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCLUC = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCLUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCSINH")]
	public partial class HOCSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _HoTen;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _NoiSinh;
		
		private string _MaDanToc;
		
		private string _MaTonGiao;
		
		private string _HoTenCha;
		
		private string _MaNNghiepCha;
		
		private string _HoTenMe;
		
		private string _MaNNghiepMe;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<KQ_CA_NAM_MON_HOC> _KQ_CA_NAM_MON_HOCs;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
		private EntitySet<KQ_HOC_KY_MON_HOC> _KQ_HOC_KY_MON_HOCs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
		private EntitySet<PHANLOP> _PHANLOPs;
		
		private EntityRef<DANTOC> _DANTOC;
		
		private EntityRef<NGHENGHIEP> _NGHENGHIEP;
		
		private EntityRef<NGHENGHIEP> _NGHENGHIEP1;
		
		private EntityRef<TONGIAO> _TONGIAO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnNoiSinhChanging(string value);
    partial void OnNoiSinhChanged();
    partial void OnMaDanTocChanging(string value);
    partial void OnMaDanTocChanged();
    partial void OnMaTonGiaoChanging(string value);
    partial void OnMaTonGiaoChanged();
    partial void OnHoTenChaChanging(string value);
    partial void OnHoTenChaChanged();
    partial void OnMaNNghiepChaChanging(string value);
    partial void OnMaNNghiepChaChanged();
    partial void OnHoTenMeChanging(string value);
    partial void OnHoTenMeChanged();
    partial void OnMaNNghiepMeChanging(string value);
    partial void OnMaNNghiepMeChanged();
    #endregion
		
		public HOCSINH()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._KQ_CA_NAM_MON_HOCs = new EntitySet<KQ_CA_NAM_MON_HOC>(new Action<KQ_CA_NAM_MON_HOC>(this.attach_KQ_CA_NAM_MON_HOCs), new Action<KQ_CA_NAM_MON_HOC>(this.detach_KQ_CA_NAM_MON_HOCs));
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			this._KQ_HOC_KY_MON_HOCs = new EntitySet<KQ_HOC_KY_MON_HOC>(new Action<KQ_HOC_KY_MON_HOC>(this.attach_KQ_HOC_KY_MON_HOCs), new Action<KQ_HOC_KY_MON_HOC>(this.detach_KQ_HOC_KY_MON_HOCs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			this._PHANLOPs = new EntitySet<PHANLOP>(new Action<PHANLOP>(this.attach_PHANLOPs), new Action<PHANLOP>(this.detach_PHANLOPs));
			this._DANTOC = default(EntityRef<DANTOC>);
			this._NGHENGHIEP = default(EntityRef<NGHENGHIEP>);
			this._NGHENGHIEP1 = default(EntityRef<NGHENGHIEP>);
			this._TONGIAO = default(EntityRef<TONGIAO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiSinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NoiSinh
		{
			get
			{
				return this._NoiSinh;
			}
			set
			{
				if ((this._NoiSinh != value))
				{
					this.OnNoiSinhChanging(value);
					this.SendPropertyChanging();
					this._NoiSinh = value;
					this.SendPropertyChanged("NoiSinh");
					this.OnNoiSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanToc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaDanToc
		{
			get
			{
				return this._MaDanToc;
			}
			set
			{
				if ((this._MaDanToc != value))
				{
					if (this._DANTOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanTocChanging(value);
					this.SendPropertyChanging();
					this._MaDanToc = value;
					this.SendPropertyChanged("MaDanToc");
					this.OnMaDanTocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTonGiao", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaTonGiao
		{
			get
			{
				return this._MaTonGiao;
			}
			set
			{
				if ((this._MaTonGiao != value))
				{
					if (this._TONGIAO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTonGiaoChanging(value);
					this.SendPropertyChanging();
					this._MaTonGiao = value;
					this.SendPropertyChanged("MaTonGiao");
					this.OnMaTonGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenCha", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string HoTenCha
		{
			get
			{
				return this._HoTenCha;
			}
			set
			{
				if ((this._HoTenCha != value))
				{
					this.OnHoTenChaChanging(value);
					this.SendPropertyChanging();
					this._HoTenCha = value;
					this.SendPropertyChanged("HoTenCha");
					this.OnHoTenChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNNghiepCha", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaNNghiepCha
		{
			get
			{
				return this._MaNNghiepCha;
			}
			set
			{
				if ((this._MaNNghiepCha != value))
				{
					if (this._NGHENGHIEP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNNghiepChaChanging(value);
					this.SendPropertyChanging();
					this._MaNNghiepCha = value;
					this.SendPropertyChanged("MaNNghiepCha");
					this.OnMaNNghiepChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenMe", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string HoTenMe
		{
			get
			{
				return this._HoTenMe;
			}
			set
			{
				if ((this._HoTenMe != value))
				{
					this.OnHoTenMeChanging(value);
					this.SendPropertyChanging();
					this._HoTenMe = value;
					this.SendPropertyChanged("HoTenMe");
					this.OnHoTenMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNNghiepMe", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaNNghiepMe
		{
			get
			{
				return this._MaNNghiepMe;
			}
			set
			{
				if ((this._MaNNghiepMe != value))
				{
					if (this._NGHENGHIEP1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNNghiepMeChanging(value);
					this.SendPropertyChanging();
					this._MaNNghiepMe = value;
					this.SendPropertyChanged("MaNNghiepMe");
					this.OnMaNNghiepMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_DIEM", Storage="_DIEMs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_CA_NAM_MON_HOC", Storage="_KQ_CA_NAM_MON_HOCs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<KQ_CA_NAM_MON_HOC> KQ_CA_NAM_MON_HOCs
		{
			get
			{
				return this._KQ_CA_NAM_MON_HOCs;
			}
			set
			{
				this._KQ_CA_NAM_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_HOC_KY_MON_HOC", Storage="_KQ_HOC_KY_MON_HOCs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this._KQ_HOC_KY_MON_HOCs;
			}
			set
			{
				this._KQ_HOC_KY_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PHANLOP", Storage="_PHANLOPs", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<PHANLOP> PHANLOPs
		{
			get
			{
				return this._PHANLOPs;
			}
			set
			{
				this._PHANLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANTOC_HOCSINH", Storage="_DANTOC", ThisKey="MaDanToc", OtherKey="MaDanToc", IsForeignKey=true)]
		public DANTOC DANTOC
		{
			get
			{
				return this._DANTOC.Entity;
			}
			set
			{
				DANTOC previousValue = this._DANTOC.Entity;
				if (((previousValue != value) 
							|| (this._DANTOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANTOC.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._DANTOC.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MaDanToc = value.MaDanToc;
					}
					else
					{
						this._MaDanToc = default(string);
					}
					this.SendPropertyChanged("DANTOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGHENGHIEP_HOCSINH", Storage="_NGHENGHIEP", ThisKey="MaNNghiepCha", OtherKey="MaNghe", IsForeignKey=true)]
		public NGHENGHIEP NGHENGHIEP
		{
			get
			{
				return this._NGHENGHIEP.Entity;
			}
			set
			{
				NGHENGHIEP previousValue = this._NGHENGHIEP.Entity;
				if (((previousValue != value) 
							|| (this._NGHENGHIEP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGHENGHIEP.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._NGHENGHIEP.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MaNNghiepCha = value.MaNghe;
					}
					else
					{
						this._MaNNghiepCha = default(string);
					}
					this.SendPropertyChanged("NGHENGHIEP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGHENGHIEP_HOCSINH1", Storage="_NGHENGHIEP1", ThisKey="MaNNghiepMe", OtherKey="MaNghe", IsForeignKey=true)]
		public NGHENGHIEP NGHENGHIEP1
		{
			get
			{
				return this._NGHENGHIEP1.Entity;
			}
			set
			{
				NGHENGHIEP previousValue = this._NGHENGHIEP1.Entity;
				if (((previousValue != value) 
							|| (this._NGHENGHIEP1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGHENGHIEP1.Entity = null;
						previousValue.HOCSINHs1.Remove(this);
					}
					this._NGHENGHIEP1.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs1.Add(this);
						this._MaNNghiepMe = value.MaNghe;
					}
					else
					{
						this._MaNNghiepMe = default(string);
					}
					this.SendPropertyChanged("NGHENGHIEP1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TONGIAO_HOCSINH", Storage="_TONGIAO", ThisKey="MaTonGiao", OtherKey="MaTonGiao", IsForeignKey=true)]
		public TONGIAO TONGIAO
		{
			get
			{
				return this._TONGIAO.Entity;
			}
			set
			{
				TONGIAO previousValue = this._TONGIAO.Entity;
				if (((previousValue != value) 
							|| (this._TONGIAO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TONGIAO.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._TONGIAO.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MaTonGiao = value.MaTonGiao;
					}
					else
					{
						this._MaTonGiao = default(string);
					}
					this.SendPropertyChanged("TONGIAO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
		
		private void attach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKetQua;
		
		private string _TenKetQua;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKetQuaChanging(string value);
    partial void OnMaKetQuaChanged();
    partial void OnTenKetQuaChanging(string value);
    partial void OnTenKetQuaChanged();
    #endregion
		
		public KETQUA()
		{
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKetQua", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKetQua
		{
			get
			{
				return this._MaKetQua;
			}
			set
			{
				if ((this._MaKetQua != value))
				{
					this.OnMaKetQuaChanging(value);
					this.SendPropertyChanging();
					this._MaKetQua = value;
					this.SendPropertyChanged("MaKetQua");
					this.OnMaKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKetQua", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenKetQua
		{
			get
			{
				return this._TenKetQua;
			}
			set
			{
				if ((this._TenKetQua != value))
				{
					this.OnTenKetQuaChanging(value);
					this.SendPropertyChanging();
					this._TenKetQua = value;
					this.SendPropertyChanged("TenKetQua");
					this.OnTenKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KETQUA_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaKetQua", OtherKey="MaKetQua")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.KETQUA = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.KETQUA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOILOP")]
	public partial class KHOILOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoiLop;
		
		private string _TenKhoiLop;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<PHANLOP> _PHANLOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiLopChanging(string value);
    partial void OnMaKhoiLopChanged();
    partial void OnTenKhoiLopChanging(string value);
    partial void OnTenKhoiLopChanged();
    #endregion
		
		public KHOILOP()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._PHANLOPs = new EntitySet<PHANLOP>(new Action<PHANLOP>(this.attach_PHANLOPs), new Action<PHANLOP>(this.detach_PHANLOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoiLop", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenKhoiLop
		{
			get
			{
				return this._TenKhoiLop;
			}
			set
			{
				if ((this._TenKhoiLop != value))
				{
					this.OnTenKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._TenKhoiLop = value;
					this.SendPropertyChanged("TenKhoiLop");
					this.OnTenKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_LOP", Storage="_LOPs", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_PHANLOP", Storage="_PHANLOPs", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop")]
		public EntitySet<PHANLOP> PHANLOPs
		{
			get
			{
				return this._PHANLOPs;
			}
			set
			{
				this._PHANLOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = null;
		}
		
		private void attach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = this;
		}
		
		private void detach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOILOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KQ_CA_NAM_MON_HOC")]
	public partial class KQ_CA_NAM_MON_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaLop;
		
		private string _MaMonHoc;
		
		private string _MaNamHoc;
		
		private System.Nullable<double> _DiemThiLai;
		
		private double _DTBCaNam;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnDiemThiLaiChanging(System.Nullable<double> value);
    partial void OnDiemThiLaiChanged();
    partial void OnDTBCaNamChanging(double value);
    partial void OnDTBCaNamChanged();
    #endregion
		
		public KQ_CA_NAM_MON_HOC()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemThiLai", DbType="Float")]
		public System.Nullable<double> DiemThiLai
		{
			get
			{
				return this._DiemThiLai;
			}
			set
			{
				if ((this._DiemThiLai != value))
				{
					this.OnDiemThiLaiChanging(value);
					this.SendPropertyChanging();
					this._DiemThiLai = value;
					this.SendPropertyChanged("DiemThiLai");
					this.OnDiemThiLaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBCaNam", DbType="Float NOT NULL")]
		public double DTBCaNam
		{
			get
			{
				return this._DTBCaNam;
			}
			set
			{
				if ((this._DTBCaNam != value))
				{
					this.OnDTBCaNamChanging(value);
					this.SendPropertyChanging();
					this._DTBCaNam = value;
					this.SendPropertyChanged("DTBCaNam");
					this.OnDTBCaNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_CA_NAM_MON_HOC", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KQ_CA_NAM_MON_HOCs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_MON_HOCs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_CA_NAM_MON_HOC", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.KQ_CA_NAM_MON_HOCs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_MON_HOCs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KQ_CA_NAM_MON_HOC", Storage="_MONHOC", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KQ_CA_NAM_MON_HOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_MON_HOCs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_CA_NAM_MON_HOC", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.KQ_CA_NAM_MON_HOCs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_MON_HOCs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KQ_CA_NAM_TONG_HOP")]
	public partial class KQ_CA_NAM_TONG_HOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaLop;
		
		private string _MaNamHoc;
		
		private string _MaHocLuc;
		
		private string _MaHanhKiem;
		
		private double _DTBCaNam;
		
		private string _MaKetQua;
		
		private EntityRef<HANHKIEM> _HANHKIEM;
		
		private EntityRef<HOCLUC> _HOCLUC;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<KETQUA> _KETQUA;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnMaHocLucChanging(string value);
    partial void OnMaHocLucChanged();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnDTBCaNamChanging(double value);
    partial void OnDTBCaNamChanged();
    partial void OnMaKetQuaChanging(string value);
    partial void OnMaKetQuaChanged();
    #endregion
		
		public KQ_CA_NAM_TONG_HOP()
		{
			this._HANHKIEM = default(EntityRef<HANHKIEM>);
			this._HOCLUC = default(EntityRef<HOCLUC>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._KETQUA = default(EntityRef<KETQUA>);
			this._LOP = default(EntityRef<LOP>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					if (this._HOCLUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					if (this._HANHKIEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBCaNam", DbType="Float NOT NULL")]
		public double DTBCaNam
		{
			get
			{
				return this._DTBCaNam;
			}
			set
			{
				if ((this._DTBCaNam != value))
				{
					this.OnDTBCaNamChanging(value);
					this.SendPropertyChanging();
					this._DTBCaNam = value;
					this.SendPropertyChanged("DTBCaNam");
					this.OnDTBCaNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKetQua", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaKetQua
		{
			get
			{
				return this._MaKetQua;
			}
			set
			{
				if ((this._MaKetQua != value))
				{
					if (this._KETQUA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKetQuaChanging(value);
					this.SendPropertyChanging();
					this._MaKetQua = value;
					this.SendPropertyChanged("MaKetQua");
					this.OnMaKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANHKIEM_KQ_CA_NAM_TONG_HOP", Storage="_HANHKIEM", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem", IsForeignKey=true)]
		public HANHKIEM HANHKIEM
		{
			get
			{
				return this._HANHKIEM.Entity;
			}
			set
			{
				HANHKIEM previousValue = this._HANHKIEM.Entity;
				if (((previousValue != value) 
							|| (this._HANHKIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANHKIEM.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._HANHKIEM.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaHanhKiem = value.MaHanhKiem;
					}
					else
					{
						this._MaHanhKiem = default(string);
					}
					this.SendPropertyChanged("HANHKIEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCLUC_KQ_CA_NAM_TONG_HOP", Storage="_HOCLUC", ThisKey="MaHocLuc", OtherKey="MaHocLuc", IsForeignKey=true)]
		public HOCLUC HOCLUC
		{
			get
			{
				return this._HOCLUC.Entity;
			}
			set
			{
				HOCLUC previousValue = this._HOCLUC.Entity;
				if (((previousValue != value) 
							|| (this._HOCLUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCLUC.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._HOCLUC.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaHocLuc = value.MaHocLuc;
					}
					else
					{
						this._MaHocLuc = default(string);
					}
					this.SendPropertyChanged("HOCLUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_CA_NAM_TONG_HOP", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KETQUA_KQ_CA_NAM_TONG_HOP", Storage="_KETQUA", ThisKey="MaKetQua", OtherKey="MaKetQua", IsForeignKey=true)]
		public KETQUA KETQUA
		{
			get
			{
				return this._KETQUA.Entity;
			}
			set
			{
				KETQUA previousValue = this._KETQUA.Entity;
				if (((previousValue != value) 
							|| (this._KETQUA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KETQUA.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._KETQUA.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaKetQua = value.MaKetQua;
					}
					else
					{
						this._MaKetQua = default(string);
					}
					this.SendPropertyChanged("KETQUA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_CA_NAM_TONG_HOP", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_CA_NAM_TONG_HOP", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.KQ_CA_NAM_TONG_HOPs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_CA_NAM_TONG_HOPs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KQ_HOC_KY_MON_HOC")]
	public partial class KQ_HOC_KY_MON_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaLop;
		
		private string _MaMonHoc;
		
		private string _MaHocKy;
		
		private string _MaNamHoc;
		
		private double _DTBKiemTra;
		
		private double _DTBMonHocKy;
		
		private EntityRef<HOCKY> _HOCKY;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnDTBKiemTraChanging(double value);
    partial void OnDTBKiemTraChanged();
    partial void OnDTBMonHocKyChanging(double value);
    partial void OnDTBMonHocKyChanged();
    #endregion
		
		public KQ_HOC_KY_MON_HOC()
		{
			this._HOCKY = default(EntityRef<HOCKY>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBKiemTra", DbType="Float NOT NULL")]
		public double DTBKiemTra
		{
			get
			{
				return this._DTBKiemTra;
			}
			set
			{
				if ((this._DTBKiemTra != value))
				{
					this.OnDTBKiemTraChanging(value);
					this.SendPropertyChanging();
					this._DTBKiemTra = value;
					this.SendPropertyChanged("DTBKiemTra");
					this.OnDTBKiemTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBMonHocKy", DbType="Float NOT NULL")]
		public double DTBMonHocKy
		{
			get
			{
				return this._DTBMonHocKy;
			}
			set
			{
				if ((this._DTBMonHocKy != value))
				{
					this.OnDTBMonHocKyChanging(value);
					this.SendPropertyChanging();
					this._DTBMonHocKy = value;
					this.SendPropertyChanged("DTBMonHocKy");
					this.OnDTBMonHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_KQ_HOC_KY_MON_HOC", Storage="_HOCKY", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.KQ_HOC_KY_MON_HOCs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_MON_HOCs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_HOC_KY_MON_HOC", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KQ_HOC_KY_MON_HOCs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_MON_HOCs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_HOC_KY_MON_HOC", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.KQ_HOC_KY_MON_HOCs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_MON_HOCs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KQ_HOC_KY_MON_HOC", Storage="_MONHOC", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KQ_HOC_KY_MON_HOCs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_MON_HOCs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_HOC_KY_MON_HOC", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.KQ_HOC_KY_MON_HOCs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_MON_HOCs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KQ_HOC_KY_TONG_HOP")]
	public partial class KQ_HOC_KY_TONG_HOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaLop;
		
		private string _MaHocKy;
		
		private string _MaNamHoc;
		
		private string _MaHocLuc;
		
		private string _MaHanhKiem;
		
		private System.Nullable<double> _DTBMonHocKy;
		
		private EntityRef<HOCKY> _HOCKY;
		
		private EntityRef<HANHKIEM> _HANHKIEM;
		
		private EntityRef<HOCLUC> _HOCLUC;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaHocKyChanging(string value);
    partial void OnMaHocKyChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnMaHocLucChanging(string value);
    partial void OnMaHocLucChanged();
    partial void OnMaHanhKiemChanging(string value);
    partial void OnMaHanhKiemChanged();
    partial void OnDTBMonHocKyChanging(System.Nullable<double> value);
    partial void OnDTBMonHocKyChanged();
    #endregion
		
		public KQ_HOC_KY_TONG_HOP()
		{
			this._HOCKY = default(EntityRef<HOCKY>);
			this._HANHKIEM = default(EntityRef<HANHKIEM>);
			this._HOCLUC = default(EntityRef<HOCLUC>);
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._LOP = default(EntityRef<LOP>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocKy", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocKy
		{
			get
			{
				return this._MaHocKy;
			}
			set
			{
				if ((this._MaHocKy != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocKyChanging(value);
					this.SendPropertyChanging();
					this._MaHocKy = value;
					this.SendPropertyChanged("MaHocKy");
					this.OnMaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocLuc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaHocLuc
		{
			get
			{
				return this._MaHocLuc;
			}
			set
			{
				if ((this._MaHocLuc != value))
				{
					if (this._HOCLUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocLucChanging(value);
					this.SendPropertyChanging();
					this._MaHocLuc = value;
					this.SendPropertyChanged("MaHocLuc");
					this.OnMaHocLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHanhKiem", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaHanhKiem
		{
			get
			{
				return this._MaHanhKiem;
			}
			set
			{
				if ((this._MaHanhKiem != value))
				{
					if (this._HANHKIEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHanhKiemChanging(value);
					this.SendPropertyChanging();
					this._MaHanhKiem = value;
					this.SendPropertyChanged("MaHanhKiem");
					this.OnMaHanhKiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBMonHocKy", DbType="Float")]
		public System.Nullable<double> DTBMonHocKy
		{
			get
			{
				return this._DTBMonHocKy;
			}
			set
			{
				if ((this._DTBMonHocKy != value))
				{
					this.OnDTBMonHocKyChanging(value);
					this.SendPropertyChanging();
					this._DTBMonHocKy = value;
					this.SendPropertyChanged("DTBMonHocKy");
					this.OnDTBMonHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_KQ_HOC_KY_TONG_HOP", Storage="_HOCKY", ThisKey="MaHocKy", OtherKey="MaHocKy", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaHocKy = value.MaHocKy;
					}
					else
					{
						this._MaHocKy = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANHKIEM_KQ_HOC_KY_TONG_HOP", Storage="_HANHKIEM", ThisKey="MaHanhKiem", OtherKey="MaHanhKiem", IsForeignKey=true)]
		public HANHKIEM HANHKIEM
		{
			get
			{
				return this._HANHKIEM.Entity;
			}
			set
			{
				HANHKIEM previousValue = this._HANHKIEM.Entity;
				if (((previousValue != value) 
							|| (this._HANHKIEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANHKIEM.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._HANHKIEM.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaHanhKiem = value.MaHanhKiem;
					}
					else
					{
						this._MaHanhKiem = default(string);
					}
					this.SendPropertyChanged("HANHKIEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCLUC_KQ_HOC_KY_TONG_HOP", Storage="_HOCLUC", ThisKey="MaHocLuc", OtherKey="MaHocLuc", IsForeignKey=true)]
		public HOCLUC HOCLUC
		{
			get
			{
				return this._HOCLUC.Entity;
			}
			set
			{
				HOCLUC previousValue = this._HOCLUC.Entity;
				if (((previousValue != value) 
							|| (this._HOCLUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCLUC.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._HOCLUC.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaHocLuc = value.MaHocLuc;
					}
					else
					{
						this._MaHocLuc = default(string);
					}
					this.SendPropertyChanged("HOCLUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KQ_HOC_KY_TONG_HOP", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_HOC_KY_TONG_HOP", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_HOC_KY_TONG_HOP", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.KQ_HOC_KY_TONG_HOPs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.KQ_HOC_KY_TONG_HOPs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDIEM")]
	public partial class LOAIDIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private int _HeSo;
		
		private EntitySet<DIEM> _DIEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnHeSoChanging(int value);
    partial void OnHeSoChanged();
    #endregion
		
		public LOAIDIEM()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSo", DbType="Int NOT NULL")]
		public int HeSo
		{
			get
			{
				return this._HeSo;
			}
			set
			{
				if ((this._HeSo != value))
				{
					this.OnHeSoChanging(value);
					this.SendPropertyChanging();
					this._HeSo = value;
					this.SendPropertyChanged("HeSo");
					this.OnHeSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDIEM_DIEM", Storage="_DIEMs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDIEM = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDIEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAINGUOIDUNG")]
	public partial class LOAINGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoaiND;
		
		private EntitySet<Detail> _Details;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiNDChanging(string value);
    partial void OnTenLoaiNDChanged();
    #endregion
		
		public LOAINGUOIDUNG()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiND", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLoaiND
		{
			get
			{
				return this._TenLoaiND;
			}
			set
			{
				if ((this._TenLoaiND != value))
				{
					this.OnTenLoaiNDChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiND = value;
					this.SendPropertyChanged("TenLoaiND");
					this.OnTenLoaiNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINGUOIDUNG_Detail", Storage="_Details", ThisKey="MaLoai", OtherKey="ID_NV")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINGUOIDUNG_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.LOAINGUOIDUNG = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.LOAINGUOIDUNG = null;
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.LOAINGUOIDUNG = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.LOAINGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoiLop;
		
		private string _MaNamHoc;
		
		private int _SiSo;
		
		private string _MaGiaoVien;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<KQ_CA_NAM_MON_HOC> _KQ_CA_NAM_MON_HOCs;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
		private EntitySet<KQ_HOC_KY_MON_HOC> _KQ_HOC_KY_MON_HOCs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
		private EntitySet<PHANLOP> _PHANLOPs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<KHOILOP> _KHOILOP;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoiLopChanging(string value);
    partial void OnMaKhoiLopChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnSiSoChanging(int value);
    partial void OnSiSoChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    #endregion
		
		public LOP()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._KQ_CA_NAM_MON_HOCs = new EntitySet<KQ_CA_NAM_MON_HOC>(new Action<KQ_CA_NAM_MON_HOC>(this.attach_KQ_CA_NAM_MON_HOCs), new Action<KQ_CA_NAM_MON_HOC>(this.detach_KQ_CA_NAM_MON_HOCs));
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			this._KQ_HOC_KY_MON_HOCs = new EntitySet<KQ_HOC_KY_MON_HOC>(new Action<KQ_HOC_KY_MON_HOC>(this.attach_KQ_HOC_KY_MON_HOCs), new Action<KQ_HOC_KY_MON_HOC>(this.detach_KQ_HOC_KY_MON_HOCs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			this._PHANLOPs = new EntitySet<PHANLOP>(new Action<PHANLOP>(this.attach_PHANLOPs), new Action<PHANLOP>(this.detach_PHANLOPs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._KHOILOP = default(EntityRef<KHOILOP>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					if (this._KHOILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int NOT NULL")]
		public int SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_DIEM", Storage="_DIEMs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_CA_NAM_MON_HOC", Storage="_KQ_CA_NAM_MON_HOCs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<KQ_CA_NAM_MON_HOC> KQ_CA_NAM_MON_HOCs
		{
			get
			{
				return this._KQ_CA_NAM_MON_HOCs;
			}
			set
			{
				this._KQ_CA_NAM_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_HOC_KY_MON_HOC", Storage="_KQ_HOC_KY_MON_HOCs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this._KQ_HOC_KY_MON_HOCs;
			}
			set
			{
				this._KQ_HOC_KY_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANLOP", Storage="_PHANLOPs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<PHANLOP> PHANLOPs
		{
			get
			{
				return this._PHANLOPs;
			}
			set
			{
				this._PHANLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_PHANCONGs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_GIAOVIEN", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_LOP", Storage="_KHOILOP", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop", IsForeignKey=true)]
		public KHOILOP KHOILOP
		{
			get
			{
				return this._KHOILOP.Entity;
			}
			set
			{
				KHOILOP previousValue = this._KHOILOP.Entity;
				if (((previousValue != value) 
							|| (this._KHOILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOILOP.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOILOP.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaKhoiLop = value.MaKhoiLop;
					}
					else
					{
						this._MaKhoiLop = default(string);
					}
					this.SendPropertyChanged("KHOILOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_LOP", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMonHoc;
		
		private string _TenMonHoc;
		
		private int _SoTiet;
		
		private int _HeSo;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<GIAOVIEN> _GIAOVIENs;
		
		private EntitySet<KQ_CA_NAM_MON_HOC> _KQ_CA_NAM_MON_HOCs;
		
		private EntitySet<KQ_HOC_KY_MON_HOC> _KQ_HOC_KY_MON_HOCs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    partial void OnSoTietChanging(int value);
    partial void OnSoTietChanged();
    partial void OnHeSoChanging(int value);
    partial void OnHeSoChanged();
    #endregion
		
		public MONHOC()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._GIAOVIENs = new EntitySet<GIAOVIEN>(new Action<GIAOVIEN>(this.attach_GIAOVIENs), new Action<GIAOVIEN>(this.detach_GIAOVIENs));
			this._KQ_CA_NAM_MON_HOCs = new EntitySet<KQ_CA_NAM_MON_HOC>(new Action<KQ_CA_NAM_MON_HOC>(this.attach_KQ_CA_NAM_MON_HOCs), new Action<KQ_CA_NAM_MON_HOC>(this.detach_KQ_CA_NAM_MON_HOCs));
			this._KQ_HOC_KY_MON_HOCs = new EntitySet<KQ_HOC_KY_MON_HOC>(new Action<KQ_HOC_KY_MON_HOC>(this.attach_KQ_HOC_KY_MON_HOCs), new Action<KQ_HOC_KY_MON_HOC>(this.detach_KQ_HOC_KY_MON_HOCs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTiet", DbType="Int NOT NULL")]
		public int SoTiet
		{
			get
			{
				return this._SoTiet;
			}
			set
			{
				if ((this._SoTiet != value))
				{
					this.OnSoTietChanging(value);
					this.SendPropertyChanging();
					this._SoTiet = value;
					this.SendPropertyChanged("SoTiet");
					this.OnSoTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSo", DbType="Int NOT NULL")]
		public int HeSo
		{
			get
			{
				return this._HeSo;
			}
			set
			{
				if ((this._HeSo != value))
				{
					this.OnHeSoChanging(value);
					this.SendPropertyChanging();
					this._HeSo = value;
					this.SendPropertyChanged("HeSo");
					this.OnHeSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_DIEMs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_GIAOVIENs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this._GIAOVIENs;
			}
			set
			{
				this._GIAOVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KQ_CA_NAM_MON_HOC", Storage="_KQ_CA_NAM_MON_HOCs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<KQ_CA_NAM_MON_HOC> KQ_CA_NAM_MON_HOCs
		{
			get
			{
				return this._KQ_CA_NAM_MON_HOCs;
			}
			set
			{
				this._KQ_CA_NAM_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KQ_HOC_KY_MON_HOC", Storage="_KQ_HOC_KY_MON_HOCs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this._KQ_HOC_KY_MON_HOCs;
			}
			set
			{
				this._KQ_HOC_KY_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAMHOC")]
	public partial class NAMHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNamHoc;
		
		private string _TenNamHoc;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<KQ_CA_NAM_MON_HOC> _KQ_CA_NAM_MON_HOCs;
		
		private EntitySet<KQ_CA_NAM_TONG_HOP> _KQ_CA_NAM_TONG_HOPs;
		
		private EntitySet<KQ_HOC_KY_MON_HOC> _KQ_HOC_KY_MON_HOCs;
		
		private EntitySet<KQ_HOC_KY_TONG_HOP> _KQ_HOC_KY_TONG_HOPs;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<PHANLOP> _PHANLOPs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnTenNamHocChanging(string value);
    partial void OnTenNamHocChanged();
    #endregion
		
		public NAMHOC()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._KQ_CA_NAM_MON_HOCs = new EntitySet<KQ_CA_NAM_MON_HOC>(new Action<KQ_CA_NAM_MON_HOC>(this.attach_KQ_CA_NAM_MON_HOCs), new Action<KQ_CA_NAM_MON_HOC>(this.detach_KQ_CA_NAM_MON_HOCs));
			this._KQ_CA_NAM_TONG_HOPs = new EntitySet<KQ_CA_NAM_TONG_HOP>(new Action<KQ_CA_NAM_TONG_HOP>(this.attach_KQ_CA_NAM_TONG_HOPs), new Action<KQ_CA_NAM_TONG_HOP>(this.detach_KQ_CA_NAM_TONG_HOPs));
			this._KQ_HOC_KY_MON_HOCs = new EntitySet<KQ_HOC_KY_MON_HOC>(new Action<KQ_HOC_KY_MON_HOC>(this.attach_KQ_HOC_KY_MON_HOCs), new Action<KQ_HOC_KY_MON_HOC>(this.detach_KQ_HOC_KY_MON_HOCs));
			this._KQ_HOC_KY_TONG_HOPs = new EntitySet<KQ_HOC_KY_TONG_HOP>(new Action<KQ_HOC_KY_TONG_HOP>(this.attach_KQ_HOC_KY_TONG_HOPs), new Action<KQ_HOC_KY_TONG_HOP>(this.detach_KQ_HOC_KY_TONG_HOPs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._PHANLOPs = new EntitySet<PHANLOP>(new Action<PHANLOP>(this.attach_PHANLOPs), new Action<PHANLOP>(this.detach_PHANLOPs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNamHoc", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenNamHoc
		{
			get
			{
				return this._TenNamHoc;
			}
			set
			{
				if ((this._TenNamHoc != value))
				{
					this.OnTenNamHocChanging(value);
					this.SendPropertyChanging();
					this._TenNamHoc = value;
					this.SendPropertyChanged("TenNamHoc");
					this.OnTenNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_DIEM", Storage="_DIEMs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_CA_NAM_MON_HOC", Storage="_KQ_CA_NAM_MON_HOCs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<KQ_CA_NAM_MON_HOC> KQ_CA_NAM_MON_HOCs
		{
			get
			{
				return this._KQ_CA_NAM_MON_HOCs;
			}
			set
			{
				this._KQ_CA_NAM_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_CA_NAM_TONG_HOP", Storage="_KQ_CA_NAM_TONG_HOPs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<KQ_CA_NAM_TONG_HOP> KQ_CA_NAM_TONG_HOPs
		{
			get
			{
				return this._KQ_CA_NAM_TONG_HOPs;
			}
			set
			{
				this._KQ_CA_NAM_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_HOC_KY_MON_HOC", Storage="_KQ_HOC_KY_MON_HOCs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<KQ_HOC_KY_MON_HOC> KQ_HOC_KY_MON_HOCs
		{
			get
			{
				return this._KQ_HOC_KY_MON_HOCs;
			}
			set
			{
				this._KQ_HOC_KY_MON_HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_KQ_HOC_KY_TONG_HOP", Storage="_KQ_HOC_KY_TONG_HOPs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<KQ_HOC_KY_TONG_HOP> KQ_HOC_KY_TONG_HOPs
		{
			get
			{
				return this._KQ_HOC_KY_TONG_HOPs;
			}
			set
			{
				this._KQ_HOC_KY_TONG_HOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_LOP", Storage="_LOPs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_PHANLOP", Storage="_PHANLOPs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<PHANLOP> PHANLOPs
		{
			get
			{
				return this._PHANLOPs;
			}
			set
			{
				this._PHANLOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MaNamHoc", OtherKey="MaNamHoc")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_KQ_CA_NAM_MON_HOCs(KQ_CA_NAM_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_KQ_CA_NAM_TONG_HOPs(KQ_CA_NAM_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_KQ_HOC_KY_MON_HOCs(KQ_HOC_KY_MON_HOC entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_KQ_HOC_KY_TONG_HOPs(KQ_HOC_KY_TONG_HOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_PHANLOPs(PHANLOP entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NAMHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGHENGHIEP")]
	public partial class NGHENGHIEP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNghe;
		
		private string _TenNghe;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
		private EntitySet<HOCSINH> _HOCSINHs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgheChanging(string value);
    partial void OnMaNgheChanged();
    partial void OnTenNgheChanging(string value);
    partial void OnTenNgheChanged();
    #endregion
		
		public NGHENGHIEP()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			this._HOCSINHs1 = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs1), new Action<HOCSINH>(this.detach_HOCSINHs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNghe", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNghe
		{
			get
			{
				return this._MaNghe;
			}
			set
			{
				if ((this._MaNghe != value))
				{
					this.OnMaNgheChanging(value);
					this.SendPropertyChanging();
					this._MaNghe = value;
					this.SendPropertyChanged("MaNghe");
					this.OnMaNgheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNghe", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenNghe
		{
			get
			{
				return this._TenNghe;
			}
			set
			{
				if ((this._TenNghe != value))
				{
					this.OnTenNgheChanging(value);
					this.SendPropertyChanging();
					this._TenNghe = value;
					this.SendPropertyChanged("TenNghe");
					this.OnTenNgheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGHENGHIEP_HOCSINH", Storage="_HOCSINHs", ThisKey="MaNghe", OtherKey="MaNNghiepCha")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGHENGHIEP_HOCSINH1", Storage="_HOCSINHs1", ThisKey="MaNghe", OtherKey="MaNNghiepMe")]
		public EntitySet<HOCSINH> HOCSINHs1
		{
			get
			{
				return this._HOCSINHs1;
			}
			set
			{
				this._HOCSINHs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.NGHENGHIEP = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.NGHENGHIEP = null;
		}
		
		private void attach_HOCSINHs1(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.NGHENGHIEP1 = this;
		}
		
		private void detach_HOCSINHs1(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.NGHENGHIEP1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaND;
		
		private string _MaLoai;
		
		private string _TenND;
		
		private string _TenDNhap;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOAINGUOIDUNG> _LOAINGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNDChanging(string value);
    partial void OnMaNDChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenNDChanging(string value);
    partial void OnTenNDChanged();
    partial void OnTenDNhapChanging(string value);
    partial void OnTenDNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOAINGUOIDUNG = default(EntityRef<LOAINGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaND", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaND
		{
			get
			{
				return this._MaND;
			}
			set
			{
				if ((this._MaND != value))
				{
					this.OnMaNDChanging(value);
					this.SendPropertyChanging();
					this._MaND = value;
					this.SendPropertyChanged("MaND");
					this.OnMaNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LOAINGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenND", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string TenND
		{
			get
			{
				return this._TenND;
			}
			set
			{
				if ((this._TenND != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenNDChanging(value);
					this.SendPropertyChanging();
					this._TenND = value;
					this.SendPropertyChanged("TenND");
					this.OnTenNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDNhap", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDNhap
		{
			get
			{
				return this._TenDNhap;
			}
			set
			{
				if ((this._TenDNhap != value))
				{
					this.OnTenDNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDNhap = value;
					this.SendPropertyChanged("TenDNhap");
					this.OnTenDNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_NGUOIDUNG", Storage="_GIAOVIEN", ThisKey="TenND", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._TenND = value.MaGiaoVien;
					}
					else
					{
						this._TenND = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAINGUOIDUNG_NGUOIDUNG", Storage="_LOAINGUOIDUNG", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAINGUOIDUNG LOAINGUOIDUNG
		{
			get
			{
				return this._LOAINGUOIDUNG.Entity;
			}
			set
			{
				LOAINGUOIDUNG previousValue = this._LOAINGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._LOAINGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAINGUOIDUNG.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._LOAINGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LOAINGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Per;
		
		private System.Nullable<int> _ID_Group;
		
		private string _TenPer;
		
		private string _Per_Code;
		
		private EntitySet<Detail> _Details;
		
		private EntityRef<GroupPer> _GroupPer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PerChanging(int value);
    partial void OnID_PerChanged();
    partial void OnID_GroupChanging(System.Nullable<int> value);
    partial void OnID_GroupChanged();
    partial void OnTenPerChanging(string value);
    partial void OnTenPerChanged();
    partial void OnPer_CodeChanging(string value);
    partial void OnPer_CodeChanged();
    #endregion
		
		public Permission()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._GroupPer = default(EntityRef<GroupPer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Per", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Per
		{
			get
			{
				return this._ID_Per;
			}
			set
			{
				if ((this._ID_Per != value))
				{
					this.OnID_PerChanging(value);
					this.SendPropertyChanging();
					this._ID_Per = value;
					this.SendPropertyChanged("ID_Per");
					this.OnID_PerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Group", DbType="Int")]
		public System.Nullable<int> ID_Group
		{
			get
			{
				return this._ID_Group;
			}
			set
			{
				if ((this._ID_Group != value))
				{
					if (this._GroupPer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GroupChanging(value);
					this.SendPropertyChanging();
					this._ID_Group = value;
					this.SendPropertyChanged("ID_Group");
					this.OnID_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPer", DbType="NVarChar(MAX)")]
		public string TenPer
		{
			get
			{
				return this._TenPer;
			}
			set
			{
				if ((this._TenPer != value))
				{
					this.OnTenPerChanging(value);
					this.SendPropertyChanging();
					this._TenPer = value;
					this.SendPropertyChanged("TenPer");
					this.OnTenPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Code", DbType="NVarChar(MAX)")]
		public string Per_Code
		{
			get
			{
				return this._Per_Code;
			}
			set
			{
				if ((this._Per_Code != value))
				{
					this.OnPer_CodeChanging(value);
					this.SendPropertyChanging();
					this._Per_Code = value;
					this.SendPropertyChanged("Per_Code");
					this.OnPer_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_Detail", Storage="_Details", ThisKey="ID_Per", OtherKey="ID_Per")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupPer_Permission", Storage="_GroupPer", ThisKey="ID_Group", OtherKey="ID_GroupPer", IsForeignKey=true)]
		public GroupPer GroupPer
		{
			get
			{
				return this._GroupPer.Entity;
			}
			set
			{
				GroupPer previousValue = this._GroupPer.Entity;
				if (((previousValue != value) 
							|| (this._GroupPer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupPer.Entity = null;
						previousValue.Permissions.Remove(this);
					}
					this._GroupPer.Entity = value;
					if ((value != null))
					{
						value.Permissions.Add(this);
						this._ID_Group = value.ID_GroupPer;
					}
					else
					{
						this._ID_Group = default(Nullable<int>);
					}
					this.SendPropertyChanged("GroupPer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANLOP")]
	public partial class PHANLOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNamHoc;
		
		private string _MaKhoiLop;
		
		private string _MaLop;
		
		private string _MaHocSinh;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<KHOILOP> _KHOILOP;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnMaKhoiLopChanging(string value);
    partial void OnMaKhoiLopChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    #endregion
		
		public PHANLOP()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._KHOILOP = default(EntityRef<KHOILOP>);
			this._LOP = default(EntityRef<LOP>);
			this._NAMHOC = default(EntityRef<NAMHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoiLop", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoiLop
		{
			get
			{
				return this._MaKhoiLop;
			}
			set
			{
				if ((this._MaKhoiLop != value))
				{
					if (this._KHOILOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._MaKhoiLop = value;
					this.SendPropertyChanged("MaKhoiLop");
					this.OnMaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_PHANLOP", Storage="_HOCSINH", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.PHANLOPs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.PHANLOPs.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOILOP_PHANLOP", Storage="_KHOILOP", ThisKey="MaKhoiLop", OtherKey="MaKhoiLop", IsForeignKey=true)]
		public KHOILOP KHOILOP
		{
			get
			{
				return this._KHOILOP.Entity;
			}
			set
			{
				KHOILOP previousValue = this._KHOILOP.Entity;
				if (((previousValue != value) 
							|| (this._KHOILOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOILOP.Entity = null;
						previousValue.PHANLOPs.Remove(this);
					}
					this._KHOILOP.Entity = value;
					if ((value != null))
					{
						value.PHANLOPs.Add(this);
						this._MaKhoiLop = value.MaKhoiLop;
					}
					else
					{
						this._MaKhoiLop = default(string);
					}
					this.SendPropertyChanged("KHOILOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANLOP", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHANLOPs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHANLOPs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_PHANLOP", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.PHANLOPs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.PHANLOPs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MaNamHoc;
		
		private string _MaLop;
		
		private string _MaMonHoc;
		
		private string _MaGiaoVien;
		
		private EntityRef<NAMHOC> _NAMHOC;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMaNamHocChanging(string value);
    partial void OnMaNamHocChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonHocChanging(string value);
    partial void OnMaMonHocChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    #endregion
		
		public PHANCONG()
		{
			this._NAMHOC = default(EntityRef<NAMHOC>);
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNamHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaNamHoc
		{
			get
			{
				return this._MaNamHoc;
			}
			set
			{
				if ((this._MaNamHoc != value))
				{
					if (this._NAMHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamHocChanging(value);
					this.SendPropertyChanging();
					this._MaNamHoc = value;
					this.SendPropertyChanged("MaNamHoc");
					this.OnMaNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMHOC_PHANCONG", Storage="_NAMHOC", ThisKey="MaNamHoc", OtherKey="MaNamHoc", IsForeignKey=true)]
		public NAMHOC NAMHOC
		{
			get
			{
				return this._NAMHOC.Entity;
			}
			set
			{
				NAMHOC previousValue = this._NAMHOC.Entity;
				if (((previousValue != value) 
							|| (this._NAMHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMHOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._NAMHOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaNamHoc = value.MaNamHoc;
					}
					else
					{
						this._MaNamHoc = default(string);
					}
					this.SendPropertyChanged("NAMHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_GIAOVIEN", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_PHANCONG", Storage="_MONHOC", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Role;
		
		private string _TenRole;
		
		private string _Role_Code;
		
		private EntitySet<Detail> _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RoleChanging(int value);
    partial void OnID_RoleChanged();
    partial void OnTenRoleChanging(string value);
    partial void OnTenRoleChanged();
    partial void OnRole_CodeChanging(string value);
    partial void OnRole_CodeChanged();
    #endregion
		
		public Role()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Role
		{
			get
			{
				return this._ID_Role;
			}
			set
			{
				if ((this._ID_Role != value))
				{
					this.OnID_RoleChanging(value);
					this.SendPropertyChanging();
					this._ID_Role = value;
					this.SendPropertyChanged("ID_Role");
					this.OnID_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRole", DbType="NVarChar(MAX)")]
		public string TenRole
		{
			get
			{
				return this._TenRole;
			}
			set
			{
				if ((this._TenRole != value))
				{
					this.OnTenRoleChanging(value);
					this.SendPropertyChanging();
					this._TenRole = value;
					this.SendPropertyChanged("TenRole");
					this.OnTenRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Code", DbType="NVarChar(MAX)")]
		public string Role_Code
		{
			get
			{
				return this._Role_Code;
			}
			set
			{
				if ((this._Role_Code != value))
				{
					this.OnRole_CodeChanging(value);
					this.SendPropertyChanging();
					this._Role_Code = value;
					this.SendPropertyChanged("Role_Code");
					this.OnRole_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Detail", Storage="_Details", ThisKey="ID_Role", OtherKey="ID_Role")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TONGIAO")]
	public partial class TONGIAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTonGiao;
		
		private string _TenTonGiao;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTonGiaoChanging(string value);
    partial void OnMaTonGiaoChanged();
    partial void OnTenTonGiaoChanging(string value);
    partial void OnTenTonGiaoChanged();
    #endregion
		
		public TONGIAO()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTonGiao", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTonGiao
		{
			get
			{
				return this._MaTonGiao;
			}
			set
			{
				if ((this._MaTonGiao != value))
				{
					this.OnMaTonGiaoChanging(value);
					this.SendPropertyChanging();
					this._MaTonGiao = value;
					this.SendPropertyChanged("MaTonGiao");
					this.OnMaTonGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTonGiao", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenTonGiao
		{
			get
			{
				return this._TenTonGiao;
			}
			set
			{
				if ((this._TenTonGiao != value))
				{
					this.OnTenTonGiaoChanging(value);
					this.SendPropertyChanging();
					this._TenTonGiao = value;
					this.SendPropertyChanged("TenTonGiao");
					this.OnTenTonGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TONGIAO_HOCSINH", Storage="_HOCSINHs", ThisKey="MaTonGiao", OtherKey="MaTonGiao")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.TONGIAO = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.TONGIAO = null;
		}
	}
}
#pragma warning restore 1591
